"""added area_polygon to MUs

Revision ID: bfb7fa768c2f
Revises: d11061a531f7
Create Date: 2025-07-18 12:58:13.145862

"""

from typing import Sequence, Union

import geoalchemy2
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "bfb7fa768c2f"
down_revision: Union[str, Sequence[str], None] = "d11061a531f7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('spatial_ref_sys')
    op.add_column(
        "management_units",
        sa.Column(
            "area_polygon",
            geoalchemy2.types.Geometry(
                geometry_type="POLYGON",
                srid=4326,
                from_text="ST_GeomFromEWKT",
                name="geometry",
            ),
            nullable=True,
        ),
    )


"""     op.create_index(
        "idx_management_units_area_polygon",
        "management_units",
        ["area_polygon"],
        unique=False,
        postgresql_using="gist",
    ) """
# ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index(
    #    "idx_management_units_area_polygon",
    #    table_name="management_units",
    #    postgresql_using="gist",
    # )
    op.drop_column("management_units", "area_polygon")


"""     op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name=op.f('spatial_ref_sys_srid_check')),
    sa.PrimaryKeyConstraint('srid', name=op.f('spatial_ref_sys_pkey'))
    ) """
# ### end Alembic commands ###
