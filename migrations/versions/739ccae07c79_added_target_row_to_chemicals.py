"""Added target row to Chemicals

Revision ID: 739ccae07c79
Revises: 9e0f498ec5b8
Create Date: 2025-06-26 12:47:28.405718

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "739ccae07c79"
down_revision: Union[str, Sequence[str], None] = "9e0f498ec5b8"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    pass


# ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("OPEN", "CLOSED", name="taskstatus").create(op.get_bind())
    op.add_column(
        "chemicals",
        sa.Column(
            "status",
            postgresql.ENUM("OPEN", "CLOSED", name="taskstatus", create_type=False),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_constraint(None, "chemicals", type_="foreignkey")
    op.drop_column("chemicals", "target")
    op.drop_column("chemicals", "chem_group_id")
    op.create_table(
        "users",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("hash_password", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_login", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("users_pkey")),
    )
    op.create_index(op.f("ix_users_last_login"), "users", ["last_login"], unique=False)
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(
        op.f("ix_users_created_date"), "users", ["created_date"], unique=False
    )
    # ### end Alembic commands ###
