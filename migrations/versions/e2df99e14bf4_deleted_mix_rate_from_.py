"""Deleted mix rate from SprayChemicals

Revision ID: e2df99e14bf4
Revises: 4286f0cafc4e
Create Date: 2025-06-27 10:39:47.391138

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "e2df99e14bf4"
down_revision: Union[str, Sequence[str], None] = "4286f0cafc4e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_created_date"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_index(op.f("ix_users_last_login"), table_name="users")
    op.drop_table("users")
    op.drop_column("spray_program_chemicals", "mix_rate_per_100L")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "spray_program_chemicals",
        sa.Column(
            "mix_rate_per_100L",
            sa.NUMERIC(precision=5, scale=2),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("hash_password", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_login", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("users_pkey")),
    )
    op.create_index(op.f("ix_users_last_login"), "users", ["last_login"], unique=False)
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(
        op.f("ix_users_created_date"), "users", ["created_date"], unique=False
    )
    # ### end Alembic commands ###
